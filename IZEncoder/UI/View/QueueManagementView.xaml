<mah:MetroWindow x:Class="IZEncoder.UI.View.QueueManagementView"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:local="clr-namespace:IZEncoder.UI.View"
                 xmlns:common="clr-namespace:IZEncoder.Common"
                 xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                 xmlns:cal="http://www.caliburnproject.org"
                 xmlns:c="clr-namespace:CalcBinding;assembly=CalcBinding"
                 xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                 GlowBrush="{DynamicResource AccentColorBrush}"
                 TitleCharacterCasing="Normal"
                 WindowTransitionsEnabled="False"
                 WindowStartupLocation="CenterOwner"
                 mc:Ignorable="d"
                 Title="Queue Management" ResizeMode="CanResizeWithGrip"
                 Height="300" Width="800">
    <Grid>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="2" />
                <ColumnDefinition MinWidth="250" Width="250" />
            </Grid.ColumnDefinitions>
            <DataGrid x:Name="QueueDataGrid" ItemsSource="{Binding G.EncodingQueueProcessor.QueueCollection}"
                      Margin="5"
                      AutoGenerateColumns="False" IsReadOnly="True" CanUserSortColumns="False"
                      SelectedItem="{Binding SelectedQueue}">
                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="{x:Type DataGridColumnHeader}"
                           BasedOn="{StaticResource MetroDataGridColumnHeader}">
                        <Setter Property="mah:ControlsHelper.ContentCharacterCasing" Value="Normal" />
                    </Style>
                </DataGrid.ColumnHeaderStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Date" Binding="{Binding CreatedOn}" Width="180" />
                    <DataGridTextColumn Header="Output" Binding="{Binding Project.Output}" Width="*" />
                    <DataGridTextColumn Header="Status" Binding="{Binding Status}" MinWidth="80" />
                </DataGrid.Columns>
            </DataGrid>
            <Rectangle Grid.Column="1" Fill="{DynamicResource AccentColorBrush}" Margin="0,5" />
            <Grid Grid.Column="2" Margin="5"
                  Visibility="{c:Binding 'SelectedQueue != null', FalseToVisibility=Collapsed}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="32" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="20" />
                </Grid.RowDefinitions>
                <TextBlock Text="Queue Details" FontSize="20" FontWeight="Light" Margin="8,0,5,5"
                           VerticalAlignment="Top"
                           HorizontalAlignment="Left" />
                <Rectangle VerticalAlignment="Bottom" Height="2" Fill="{DynamicResource AccentColorBrush}" />
                <ScrollViewer Grid.Row="1" Margin="0,5" VerticalScrollBarVisibility="Auto">
                    <StackPanel>
                        <StackPanel.Resources>
                            <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                                <Setter Property="Height" Value="20" />
                                <Setter Property="MinHeight" Value="0" />
                                <Setter Property="FontSize" Value="11" />
                                <Setter Property="Padding" Value="0,-2,0,0" />
                            </Style>
                            <Style TargetType="Grid">
                                <Setter Property="Margin" Value="0,2,0,0" />
                            </Style>
                        </StackPanel.Resources>
                        <Grid Margin="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="2*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Queue Id" />
                            <TextBox Text="{Binding QueueId}" Grid.Column="1" IsReadOnly="True" Cursor="Hand"
                                     ToolTip="Open working directory"
                                     cal:Message.Attach="[PreviewMouseLeftButtonDown] = [QueueIdPreviewMouseLeftButtonDown($eventArgs)]" />
                        </Grid>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="2*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Created" />
                            <TextBox Text="{Binding SelectedQueue.CreatedOn}" Grid.Column="1" IsReadOnly="True" />
                        </Grid>
                        <Grid Visibility="{c:Binding 'SelectedQueue.CompletedOn != null', FalseToVisibility=Collapsed}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="2*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Completed" />
                            <TextBox Text="{Binding SelectedQueue.CompletedOn}" Grid.Column="1" IsReadOnly="True" />
                        </Grid>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="2*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Input" />
                            <TextBox Text="{Binding SelectedQueue.Project.Input.Filename}" Grid.Column="1"
                                     IsReadOnly="True" />
                        </Grid>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="2*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Output" />
                            <TextBox Text="{Binding SelectedQueue.Project.Output}" Grid.Column="1" IsReadOnly="True" />
                        </Grid>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="2*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Status" />
                            <TextBox Text="{Binding SelectedQueue.Status}" Grid.Column="1" IsReadOnly="True" />
                        </Grid>
                        <Grid Visibility="{c:Binding 'SelectedQueue.Reason != null', FalseToVisibility=Collapsed}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="2*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Reason" />
                            <TextBox Text="{Binding SelectedQueue.Reason}" Grid.Column="1" IsReadOnly="True" />
                        </Grid>
                        <Grid
                            Visibility="{c:Binding 'SelectedQueue.Status == common:EncodingQueueStatus.Processing', FalseToVisibility=Collapsed}"
                            Margin="0,4,0,0">
                            <StackPanel>
                                <TextBlock>
                                    <Run Text="Processing: " />
                                    <Run Text="{Binding SelectedQueue.Processing, StringFormat=\{0:N2\}%}" />
                                </TextBlock>
                                <ProgressBar Value="{Binding SelectedQueue.Processing}" Maximum="100" Height="5"
                                             Foreground="{DynamicResource AccentColorBrush}"
                                             Style="{StaticResource MaterialDesignLinearProgressBar}"
                                             VerticalAlignment="Bottom" Margin="0,3,0,0" />
                            </StackPanel>
                        </Grid>
                    </StackPanel>
                </ScrollViewer>
                <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right">
                    <StackPanel.Resources>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                            <Setter Property="Margin" Value="2,0,0,0" />
                            <Setter Property="Padding" Value="15,3,15,4" />
                        </Style>
                    </StackPanel.Resources>
                    <Button Grid.Column="2" Content="Start" MinHeight="20" Padding="8,0,8,1" Margin="2,0,0,0"
                            cal:Message.Attach="[Click] = [Start()]"
                            Visibility="{c:Binding '!G.EncodingQueueProcessor.IsRunning and (SelectedQueue.Status == common:EncodingQueueStatus.Waiting || SelectedQueue.Status == common:EncodingQueueStatus.Retry)', FalseToVisibility=Collapsed}" />
                    <Button Grid.Column="2" Content="Delete" MinHeight="20" Padding="8,0,8,1" Margin="2,0,0,0"
                            cal:Message.Attach="[Click] = [Delete()]" Background="#FFEA5C5C" />
                </StackPanel>
            </Grid>
            <TextBlock Grid.Column="2" Visibility="{c:Binding 'SelectedQueue == null', FalseToVisibility=Collapsed}"
                       Text="Empty" HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="Segoe UI Light"
                       FontSize="30" d:IsHidden="True" />
        </Grid>
    </Grid>
</mah:MetroWindow>